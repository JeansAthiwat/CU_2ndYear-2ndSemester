/* USER CODE BEGIN 0 */
uint8_t state = 2;
uint8_t isPushing = 0;
uint32_t lastPushTick = 0;
uint32_t debounceTick = 50;

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
    if(HAL_GetTick() - lastPushTick < debounceTick)
    {
        return;
    }
    if(isPushing == 0 && HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13) == GPIO_PIN_RESET)
    {
        if(state == 0)
        {
            state = 1;
        } else if(state == 1)
        {
            state = 2;
        } else
        {
            state = 0;
        }
        isPushing = 1;
        lastPushTick = HAL_GetTick();
    }
    if(isPushing == 1 && HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_13) == GPIO_PIN_SET)
    {
        isPushing = 0;
    }
}
/* USER CODE END 0 */

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();

  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_USART2_UART_Init();
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */

      HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
      if(state >= 1)
      {
          HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_8);
      }
      if(state >= 2)
      {
          HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_10);
      }
      HAL_Delay(500);
  }
  /* USER CODE END 3 */
}
